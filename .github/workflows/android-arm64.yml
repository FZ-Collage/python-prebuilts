name: Build Python Android (arm64-v8a)

on:
  push:
    branches:
      - run-actions
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

env:
  PYTHON_VERSION: "3.14"
  ANDROID_HOST: aarch64-linux-android
  # armv7a-linux-androideabi
  # x86_64-linux-android
  # i686-linux-android
  ANDROID_API: 24
  ANDROID_ABI: arm64-v8a
  ANDROID_TRIPLE: aarch64-linux-android
  NDK_VERSION: r26d

jobs:
  build-python-android-arm64-v8a:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: python/cpython
          ref: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install software-properties-common -y
          sudo add-apt-repository ppa:deadsnakes/ppa
          sudo tee -a /etc/apt/sources.list > /dev/null <<EOF
            deb-src http://archive.ubuntu.com/ubuntu noble main universe restricted multiverse
            deb-src http://archive.ubuntu.com/ubuntu noble-updates main universe restricted multiverse
            deb-src http://archive.ubuntu.com/ubuntu noble-backports main universe restricted multiverse
            deb-src http://security.ubuntu.com/ubuntu noble-security main universe restricted multiverse
            EOF
          sudo apt update
          sudo apt install -y python3 build-essential curl unzip libffi-dev openjdk-21-jdk \
            pkg-config build-essential gdb lcov pkg-config \
            libbz2-dev libffi-dev libgdbm-dev libgdbm-compat-dev liblzma-dev \
            libncurses5-dev libreadline6-dev libsqlite3-dev libssl-dev \
            lzma lzma-dev tk-dev uuid-dev zlib1g-dev libzstd-dev
          sudo apt-get build-dep python3
        shell: bash

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: List dir
        run: ls

      - name: List Android
        run: ls Android

      - name: Configure
        run: |
          ./Android/android.py configure-build
          ./Android/android.py make-build
          ./Android/android.py configure-host ${{ env.ANDROID_HOST }}
        shell: bash

      - name: Build
        run: ./Android/android.py make-host ${{ env.ANDROID_HOST }}
        shell: bash

      - name: Package
        run: ./Android/android.py package ${{ env.ANDROID_HOST }}
        shell: bash

      - name: List packaged
        run: ls cross-build/${{ env.ANDROID_TRIPLE }}/dist
        shell: bash

      - name: Extract and repack Python for Android
        shell: bash
        env:
          ANDROID_TRIPLE: ${{ env.ANDROID_TRIPLE }}
        run: |
          set -e

          echo "Locating Python archive in cross-build/${{ env.ANDROID_TRIPLE }}/dist..."
          ARCHIVE=$(find cross-build/${{ env.ANDROID_TRIPLE }}/dist -name '*.tar.gz' | head -n 1)

          if [[ ! -f "$ARCHIVE" ]]
          then
            echo "❌ Python archive not found!"
            exit 1
          fi

          echo "✅ Found archive: $ARCHIVE"

          mkdir -p extracted
          echo "📦 Extracting archive..."
          tar -xzf "$ARCHIVE" -C extracted

          # Confirm prefix exists
          if [[ ! -d extracted/prefix ]]
          then
            echo "❌ expected extracted/prefix/, but it doesn't exist"
            ls -l extracted
            exit 1
          fi

          # Prepare packaging directory
          mkdir -p packaging/${{ env.ANDROID_TRIPLE }}
          echo "📁 Moving prefix contents into ${{ env.ANDROID_TRIPLE }}/..."
          mv extracted/prefix/* packaging/${{ env.ANDROID_TRIPLE }}/

          echo "📦 Creating final tarball..."
          tar -czf "python-${{ env.PYTHON_VERSION }}-android-${{ env.ANDROID_TRIPLE }}.tar.gz" -C packaging ${{ env.ANDROID_TRIPLE }}

          echo "✅ Final archive created:"
          ls -lh "python-${{ env.PYTHON_VERSION }}-android-${{ env.ANDROID_TRIPLE }}.tar.gz"

      - name: Upload packaged Python Android build
        uses: actions/upload-artifact@v4
        with:
          name: python-${{ env.PYTHON_VERSION }}-android-${{ env.ANDROID_HOST }}
          path: python-${{ env.PYTHON_VERSION }}-android-${{ env.ANDROID_TRIPLE }}.tar.gz